{"version":3,"sources":["components/AutoComplete/index.js","components/TableRow/index.js","utils/helpers.js","components/TableList/index.js","store/types/index.js","containers/Accounts/index.js","store/actions/all_accounts.js","utils/functions.js","containers/MyAccounts/index.js","store/actions/my_accounts.js","containers/Requests/index.js","store/actions/requests.js","containers/AccountInfo/chart.js","containers/AccountInfo/index.js","store/actions/single_account.js","assets/logo.svg","assets/notes.svg","assets/alerts.svg","assets/avatar.png","containers/Navbar/index.js","containers/Signin/index.js","router.js","containers/Layout/index.js","App.js","reportWebVitals.js","store/reducers/themeStore.js","store/reducers/single_account.js","store/reducers/accounts.js","store/reducers/all_accounts.js","store/reducers/requests.js","store/reducers/placements.js","store/reducers/index.js","api/index.js","store/saga/accounts.js","store/saga/single_account.js","store/saga/all_accounts.js","store/saga/requests.js","store/saga/placements.js","store/saga/index.js","store/index.js","index.js"],"names":["filter","createFilterOptions","Accounts","props","React","useState","value","setValue","suggestions","Autocomplete","onChange","event","newValue","name","inputValue","filterOptions","options","params","filtered","isExisting","some","option","display_name","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","id","getOptionLabel","renderOption","sx","width","freeSolo","renderInput","TextField","label","CustomRow","row","onEdit","type","headers","open","setOpen","hasDetails","Array","isArray","details","length","detailsLength","Object","keys","TableRow","borderBottom","map","header","field","item","index","TableCell","component","scope","isLink","to","style","textDecoration","IconButton","size","onClick","status","Button","fontWeight","whiteSpace","color","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","margin","Typography","variant","gutterBottom","Table","TableHead","align","string","charAt","toUpperCase","slice","TableBody","rowItem","values","CollapsibleTable","rows","isLoading","openEdit","display","justifyContent","marginTop","CircularProgress","TableContainer","Paper","GET_MY_ACCOUNTS_REQUESTED","GET_MY_ACCOUNTS_SUCCESS","GET_MY_ACCOUNTS_FAILED","GET_ALL_ACCOUNTS_REQUESTED","GET_ALL_ACCOUNTS_SUCCESS","GET_ALL_ACCOUNTS_FAILED","GET_REQUESTS_REQUESTED","GET_REQUESTS_SUCCESS","GET_REQUESTS_FAILED","GET_SINGLE_ACCOUNT_REQUESTED","GET_SINGLE_ACCOUNT_SUCCESS","GET_SINGLE_ACCOUNT_FAILED","ADD_CLIENT_ACCOUNT_REQUESTED","ADD_CLIENT_ACCOUNT_SUCCESS","UPDATE_CLIENT_ACCOUNT_REQUESTED","UPDATE_CLIENT_ACCOUNT_SUCCESS","GET_PLACEMENTS_REQUESTED","GET_PLACEMENTS_SUCCESS","GET_PLACEMENTS_FAILED","ADD_PLACEMENT_SUCCESS","UPDATE_PLACEMENT_SUCCESS","dispatch","useDispatch","accountsData","useSelector","state","all_accounts","useEffect","Container","maxWidth","mt","accounts","AutoComplete","getCurrentUserId","localStorage","getItem","MyAccounts","Requests","requests","useStyles","makeStyles","theme","root","background","expand","transform","marginLeft","transition","transitions","create","duration","short","expandOpen","avatar","backgroundColor","cardContent","textAlign","Organization","org","onCollapse","collapsed","classes","Card","className","CardHeader","Avatar","title","tradingName","clsx","Account","a","cursor","position","Node","o","parent","setCollapsed","handleCollapse","T","TreeNode","lineWidth","lineColor","lineBorderRadius","children","_","account","organizationChildRelationship","c","App","bgcolor","padding","organization","AccountInfo","useParams","navigate","useNavigate","singleAccountData","single_account","displayName","attributes","roles","role","replaceAll","getSingleAccount","startIcon","flexWrap","pr","flex","last_contract_year","first_contract_year","entity_type","company_type","legal_status","duns_number","ambest_number","standard_poors_number","default_address","pages","blockedRoutes","Navbar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","location","useLocation","handleCloseNavMenu","handleCloseUserMenu","includes","pathname","AppBar","Toolbar","disableGutters","noWrap","flexGrow","src","LogoImg","alt","mr","xs","md","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","Boolean","onClose","page","MenuItem","marginRight","NotesIcon","AlertsIcon","Tooltip","p","AvatarImg","clear","SigninInfoSchema","Yup","shape","email","password","required","SignIn","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","setItem","CssBaseline","flexDirection","alignItems","height","m","handleSubmit","fullWidth","autoComplete","handleChange","error","touched","errors","helperText","autoFocus","mb","Router","exact","path","element","Layout","appTheme","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","singleAccountReducer","action","assign","payload","clientsReducer","accountsAllReducer","requestsReducer","placements","placementReducer","placement","combineReducers","BASE_URL","createTreatyData","accountId","year","published","date","amount","rowsTreaty","axios","get","res","data","getAllAccounts","items","companyType","entityType","legalStatus","requesterName","requesterEmail","requestedDate","getMyAccounts","userId","getRequests","getPlacements","getMyAccountsRequested","addClientAccountRequested","updateClientAccountRequested","call","put","takeEvery","getSingleAccountRequested","getAllAccountsRequested","getAllRequestsRequested","getPlacementsRequested","addPlacementRequested","updatePlacementRequested","Saga","all","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","apiSaga","createTheme","palette","primary","main","secondary","light","grey","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.52cfb83b.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\n\nconst filter = createFilterOptions();\n\nfunction Accounts(props) {\n  const [value, setValue] = React.useState(null);\n  const { suggestions } = props\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            name: newValue,\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            name: newValue.inputValue,\n          });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.display_name);\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            name: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={suggestions}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.display_name;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.display_name}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Search\" />\n      )}\n    />\n  );\n}\n\nexport default Accounts;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Button from '@mui/material/Button';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { capitalizeFirstLetter } from '../../utils/helpers.js';\n\nfunction CustomRow(props) {\n  const { row, onEdit, type, headers } = props;\n  const [open, setOpen] = React.useState(false);\n  const hasDetails = Array.isArray(row.details) && row.details.length > 0;\n  const detailsLength = row.details ? Object.keys(row.details).length : 0;\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        {headers.map(header => header.field).map((item, index) => (\n          <TableCell key={index} component=\"th\" scope=\"row\">\n            {headers[index]?.isLink ?\n              <Link to={`/accounts/${row.id}`} style={{ textDecoration: 'none' }}>\n                {row[item]}\n              </Link>\n              : row[item]\n            }\n          </TableCell>\n        ))}\n        {type === \"editing\" && (\n          <TableCell>\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={onEdit}\n            >\n              <EditIcon />\n            </IconButton>\n            {hasDetails && (\n              <IconButton\n                aria-label=\"expand row\"\n                size=\"small\"\n                onClick={() => setOpen(!open)}\n              >\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n            )}\n          </TableCell>\n        )}\n        {type === \"access\" && (\n          <TableCell>\n            {row.status === \"unapproved\" && (\n              <Button sx={{ fontWeight: '700', whiteSpace: 'nowrap' }}>\n                Request Access\n              </Button>\n            )}\n            {row.status === \"pending\" && (\n              <Button sx={{ fontWeight: '700', whiteSpace: 'nowrap' }} color=\"grey\">\n                Cancel Access\n              </Button>\n            )}\n          </TableCell>\n        )}\n        {type === \"requests\" && (\n          <TableCell>\n            <Button sx={{ fontWeight: '700', whiteSpace: 'nowrap' }}>\n              Grant Access\n            </Button>\n            <Button sx={{ fontWeight: '700', whiteSpace: 'nowrap' }} color=\"grey\">\n              Decline Access\n            </Button>\n          </TableCell>\n        )}\n      </TableRow>\n      {hasDetails && (\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box sx={{ margin: 1 }}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  Details\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      {Object.keys(row.details[0]).map((item, index) => (\n                        <TableCell\n                          key={index}\n                          component=\"th\"\n                          scope=\"row\"\n                          align={index === detailsLength - 1 ? 'right' : 'left'}\n                        >\n                          {capitalizeFirstLetter(item)}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {row.details.map((rowItem, index) => (\n                      <TableRow key={index}>\n                        {Object.values(rowItem).map((item, index) => (\n                          <TableCell\n                            key={index}\n                            component=\"th\"\n                            scope=\"row\"\n                            align={index === detailsLength - 1 ? 'right' : 'left'}\n                          >\n                            {item}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </React.Fragment>\n  );\n}\n\nCustomRow.propTypes = {\n  row: PropTypes.shape({}).isRequired,\n};\n\nexport default CustomRow;\n\n","function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport {\n  capitalizeFirstLetter,\n}","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport CustomRow from '../TableRow';\n\nexport default function CollapsibleTable(props) {\n  const { rows, headers, type, isLoading, openEdit } = props;\n\n  if (isLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: 4 }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            {headers && headers.map((row, index) => (\n              <TableCell\n                key={index}\n                style={{ whiteSpace: 'nowrap' }}\n              >\n                {row.label}\n              </TableCell>\n            ))}\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows && rows.map((row, index) => (\n            <CustomRow\n              key={index}\n              row={row}\n              headers={headers}\n              type={type}\n              {\n                ...type === 'editing' && {\n                  onEdit: () => openEdit(row)\n                }\n              }\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","export const GET_MY_ACCOUNTS_REQUESTED = 'GET_MY_ACCOUNTS_REQUESTED';\nexport const GET_MY_ACCOUNTS_SUCCESS = 'GET_MY_ACCOUNTS_SUCCESS';\nexport const GET_MY_ACCOUNTS_FAILED = 'GET_MY_ACCOUNTS_FAILED';\n\nexport const GET_ALL_ACCOUNTS_REQUESTED = 'GET_ALL_ACCOUNTS_REQUESTED';\nexport const GET_ALL_ACCOUNTS_SUCCESS = 'GET_ALL_ACCOUNTS_SUCCESS';\nexport const GET_ALL_ACCOUNTS_FAILED = 'GET_ALL_ACCOUNTS_FAILED';\n\nexport const GET_REQUESTS_REQUESTED = 'GET_REQUESTS_REQUESTED';\nexport const GET_REQUESTS_SUCCESS = 'GET_REQUESTS_SUCCESS';\nexport const GET_REQUESTS_FAILED = 'GET_REQUESTS_FAILED';\n\nexport const GET_SINGLE_ACCOUNT_REQUESTED = 'GET_SINGLE_ACCOUNT_REQUESTED';\nexport const GET_SINGLE_ACCOUNT_SUCCESS = 'GET_SINGLE_ACCOUNT_SUCCESS';\nexport const GET_SINGLE_ACCOUNT_FAILED = 'GET_SINGLE_ACCOUNT_FAILED';\n\nexport const ADD_CLIENT_ACCOUNT_REQUESTED = 'ADD_CLIENT_ACCOUNT_REQUESTED';\nexport const ADD_CLIENT_ACCOUNT_SUCCESS = 'ADD_CLIENT_ACCOUNT_SUCCESS';\nexport const ADD_CLIENT_ACCOUNT_FAILED = 'ADD_CLIENT_ACCOUNT_FAILED';\n\nexport const UPDATE_CLIENT_ACCOUNT_REQUESTED = 'UPDATE_CLIENT_ACCOUNT_REQUESTED';\nexport const UPDATE_CLIENT_ACCOUNT_SUCCESS = 'UPDATE_CLIENT_ACCOUNT_SUCCESS';\nexport const UPDATE_CLIENT_ACCOUNT_FAILED = 'UPDATE_CLIENT_ACCOUNT_FAILED';\n\nexport const GET_PLACEMENTS_REQUESTED = 'GET_PLACEMENTS_REQUESTED';\nexport const GET_PLACEMENTS_SUCCESS = 'GET_PLACEMENTS_SUCCESS';\nexport const GET_PLACEMENTS_FAILED = 'GET_PLACEMENTS_FAILED';\n\nexport const ADD_PLACEMENT_REQUESTED = 'ADD_PLACEMENT_REQUESTED';\nexport const ADD_PLACEMENT_SUCCESS = 'ADD_PLACEMENT_SUCCESS';\nexport const ADD_PLACEMENT_FAILED = 'ADD_PLACEMENT_FAILED';\n\nexport const UPDATE_PLACEMENT_REQUESTED = 'UPDATE_PLACEMENT_REQUESTED';\nexport const UPDATE_PLACEMENT_SUCCESS = 'UPDATE_PLACEMENT_SUCCESS';\nexport const UPDATE_PLACEMENT_FAILED = 'UPDATE_PLACEMENT_FAILED';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nimport AutoComplete from '../../components/AutoComplete';\nimport TableList from '../../components/TableList';\nimport { getAllAccounts } from '../../store/actions/all_accounts';\n\nfunction Accounts() {\n  const dispatch = useDispatch();\n  const accountsData = useSelector(state => state.all_accounts);\n\n  React.useEffect(() => {\n    dispatch(getAllAccounts());\n  }, [dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4 }}>\n        {accountsData.accounts && (\n          <AutoComplete suggestions={accountsData.accounts} />\n        )}\n      </Box>\n      <Box sx={{ mt: 4 }}>\n        <TableList\n          rows={accountsData.accounts}\n          headers={accountsData.headers}\n          isLoading={accountsData.isLoading}\n          type=\"access\"\n        />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Accounts;\n","import {\n  GET_ALL_ACCOUNTS_REQUESTED,\n} from \"../types\";\n\nexport function getAllAccounts() {\n  return { type: GET_ALL_ACCOUNTS_REQUESTED };\n}\n","\nfunction getCurrentUserId() {\n  return localStorage.getItem('userId');\n}\n\nexport {\n  getCurrentUserId,\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nimport AutoComplete from '../../components/AutoComplete';\nimport TableList from '../../components/TableList';\nimport { getMyAccounts } from '../../store/actions/my_accounts';\nimport { getCurrentUserId } from '../../utils/functions';\n\nfunction MyAccounts() {\n  const dispatch = useDispatch();\n  const accountsData = useSelector(state => state.accounts);\n\n  React.useEffect(() => {\n    dispatch(getMyAccounts(getCurrentUserId()));\n  }, [dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4 }}>\n        {accountsData.accounts && (\n          <AutoComplete suggestions={accountsData.accounts} />\n        )}\n      </Box>\n      <Box sx={{ mt: 4 }}>\n        <TableList\n          rows={accountsData.accounts}\n          headers={accountsData.headers}\n          isLoading={accountsData.isLoading}\n          type=\"access\"\n        />\n      </Box>\n    </Container>\n  );\n}\n\nexport default MyAccounts;\n","import {\n  GET_MY_ACCOUNTS_REQUESTED,\n  ADD_CLIENT_ACCOUNT_REQUESTED,\n  UPDATE_CLIENT_ACCOUNT_REQUESTED,\n} from \"../types\";\n\nexport function getMyAccounts(id) {\n  return { type: GET_MY_ACCOUNTS_REQUESTED, id };\n}\n\nexport function addClientAccount(account) {\n  return { type: ADD_CLIENT_ACCOUNT_REQUESTED, account };\n}\n\nexport function updateClientAccount(account) {\n  return { type: UPDATE_CLIENT_ACCOUNT_REQUESTED, account };\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\n\nimport AutoComplete from '../../components/AutoComplete';\nimport TableList from '../../components/TableList';\nimport { getRequests } from '../../store/actions/requests';\nimport { getCurrentUserId } from '../../utils/functions';\n\nfunction Requests() {\n  const dispatch = useDispatch();\n  const accountsData = useSelector(state => state.requests);\n\n  React.useEffect(() => {\n    dispatch(getRequests(getCurrentUserId()));\n  }, [dispatch]);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4 }}>\n        {accountsData.requests && (\n          <AutoComplete suggestions={accountsData.requests} />\n        )}\n      </Box>\n      <Box sx={{ mt: 4 }}>\n        <TableList\n          rows={accountsData.requests}\n          headers={accountsData.headers}\n          isLoading={accountsData.isLoading}\n          type=\"access\"\n        />\n      </Box>\n    </Container>\n  );\n}\n\nexport default Requests;\n","import {\n  GET_REQUESTS_REQUESTED,\n} from \"../types\";\n\nexport function getRequests(id) {\n  return { type: GET_REQUESTS_REQUESTED, id };\n}\n","import React from \"react\";\n\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport _ from \"lodash\";\nimport clsx from \"clsx\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport BusinessIcon from '@mui/icons-material/Business';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport Avatar from \"@mui/material/Avatar\";\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from \"@mui/styles\";\nimport organization from \"./org.json\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: \"white\",\n    display: \"inline-block\",\n    paddingTop: 8,\n    paddingBottom: 8,\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginTop: -10,\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.short,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: \"#ECECF4\",\n  },\n  cardContent: {\n    textAlign: \"left\",\n  }\n}));\n\nfunction Organization({ org, onCollapse, collapsed }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n    >\n      <CardHeader\n        avatar={\n          org?.type === \"department\" ? (\n            <Avatar className={classes.avatar}>\n              <GroupsIcon color=\"primary\" />\n            </Avatar>\n          ) : (\n            <Avatar className={classes.avatar}>\n              <BusinessIcon color=\"primary\" />\n            </Avatar>\n          )\n        }\n        title={\n          <Typography variant=\"subtitle1\" color=\"primary\">\n            {org.tradingName}\n          </Typography>\n        }\n      />\n      <IconButton\n        color=\"primary\"\n        size=\"small\"\n        onClick={onCollapse}\n        className={clsx(classes.expand, {\n          [classes.expandOpen]: !collapsed,\n        })}\n      >\n        <ExpandMoreIcon />\n      </IconButton>\n    </Card>\n  );\n}\n\nfunction Account({ a }) {\n  const classes = useStyles();\n  return (\n    <Card\n      variant=\"outlined\"\n      className={classes.root}\n      style={{ cursor: \"pointer\" }}\n    >\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar} />\n        }\n        title={\n          <div className={classes.cardContent}>\n            <Typography variant=\"caption\" color=\"secondary.light\">{a.position}</Typography>\n            <Typography variant=\"body2\" style={{ fontWeight: 600 }}>{a.name}</Typography>\n          </div>}\n      />\n    </Card>\n  );\n}\n\nfunction Node({ o, parent }) {\n  const [collapsed, setCollapsed] = React.useState(o.collapsed);\n  const handleCollapse = () => {\n    setCollapsed(!collapsed);\n  };\n  React.useEffect(() => {\n    o.collapsed = collapsed;\n  });\n  const T = parent\n    ? TreeNode\n    : (props) => (\n        <Tree\n          {...props}\n          lineWidth={\"2px\"}\n          lineColor={\"#bbc\"}\n          lineBorderRadius={\"12px\"}\n        >\n          {props.children}\n        </Tree>\n      );\n  return collapsed ? (\n    <T\n      label={\n        <Organization\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    />\n  ) : (\n    <T\n      label={\n        <Organization\n          org={o}\n          onCollapse={handleCollapse}\n          collapsed={collapsed}\n        />\n      }\n    >\n      {_.map(o.account, (a, index) => (\n        <TreeNode label={<Account a={a} />} key={index} />\n      ))}\n      {_.map(o.organizationChildRelationship, (c, index) => (\n        <Node o={c} parent={o} key={index} />\n      ))}\n    </T>\n  );\n}\n\nexport default function App(props) {\n  return (\n      <Box bgcolor=\"tertiary\" padding={4}>\n        <Node o={organization} />\n      </Box>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport ChartView from './chart'\nimport { getSingleAccount } from '../../store/actions/single_account';\n\nfunction AccountInfo() {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const singleAccountData = useSelector(state => state.single_account);\n  const isLoading = singleAccountData.isLoading;\n  const displayName = singleAccountData.single_account?.display_name;\n  const attributes = singleAccountData.single_account?.attributes;\n  const roles = attributes?.role &&\n    attributes?.role.replaceAll(';', ', ');\n\n  useEffect(() => {\n    dispatch(getSingleAccount(id));\n  }, [id, dispatch]);\n\n  if (isLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', marginTop: 8 }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 6 }}>\n        <Typography variant=\"h4\" color=\"primary\" gutterBottom>\n          {displayName}\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          startIcon={<ArrowBackIcon />}\n          onClick={() => navigate(-1)}\n        >\n          Back\n        </Button>\n        <Box sx={{ display: 'flex', flexWrap: 'wrap', mt: 4 }}>\n          <Box sx={{ pr: 8, flex: 1 }}>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Last Contract Year:</b> {attributes?.last_contract_year}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>First Contract Year:</b> {attributes?.first_contract_year}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Entity Type:</b> {attributes?.entity_type}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Company Type:</b> {attributes?.company_type}\n            </Typography>\n          </Box>\n          <Box sx={{ pr: 8, flex: 1 }}>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Legal Status:</b> {attributes?.legal_status}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Role:</b> {roles}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>DUNS:</b> {attributes?.duns_number}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>AM Best:</b> {attributes?.ambest_number}\n            </Typography>\n          </Box>\n          <Box sx={{ pr: 8, flex: 1 }}>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Standard and Poor's:</b> {attributes?.standard_poors_number}\n            </Typography>\n            <Typography variant=\"body1\" color=\"secondary.light\" gutterBottom>\n              <b>Address:</b> {attributes?.default_address}\n            </Typography>\n          </Box>\n        </Box>\n        <Box>\n          <ChartView />\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default AccountInfo;\n","import {\n  GET_SINGLE_ACCOUNT_REQUESTED,\n} from \"../types\";\n\nexport function getSingleAccount(id) {\n  return { type: GET_SINGLE_ACCOUNT_REQUESTED, id };\n}\n","export default __webpack_public_path__ + \"static/media/logo.bc2d33b6.svg\";","export default __webpack_public_path__ + \"static/media/notes.ec498fcb.svg\";","export default __webpack_public_path__ + \"static/media/alerts.8a6b8dab.svg\";","export default __webpack_public_path__ + \"static/media/avatar.5c70f11c.png\";","import * as React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { NavLink } from 'react-router-dom';\nimport LogoImg from '../../assets/logo.svg';\nimport NotesIcon from '../../assets/notes.svg';\nimport AlertsIcon from '../../assets/alerts.svg';\nimport AvatarImg from '../../assets/avatar.png';\nimport './navbar.css';\n\nconst pages = [\n  { name: 'Search', to: '/' },\n  { name: 'My Accounts', to: '/my-accounts' },\n  { name: 'Requests', to: '/requests' },\n];\nconst blockedRoutes = ['/login']\n\nconst Navbar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  const handleLogout = () => {\n    handleCloseUserMenu();\n    localStorage.clear();\n    navigate('/login');\n  };\n\n  if (blockedRoutes.includes(location.pathname)) {\n    return (\n      <AppBar position=\"static\" color=\"secondary\">\n        <Container maxWidth=\"xl\">\n          <Toolbar disableGutters className='nav-bar'>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1, display: 'flex', justifyContent: 'center' }}\n            >\n              <img src={LogoImg} alt='logo' />\n            </Typography>\n          </Toolbar>\n        </Container>\n      </AppBar>\n    )\n  }\n\n  return (\n    <AppBar position=\"static\" color=\"secondary\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters className='nav-bar'>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            <img src={LogoImg} alt='logo' />\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page, index) => (\n                <MenuItem key={index} onClick={handleCloseNavMenu} className=\"nav-item-vertical\">\n                  <NavLink to={page.to}>\n                    {page.name}\n                  </NavLink>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            <img src={LogoImg} alt='logo' />\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page, index) => (\n              <MenuItem key={index} className=\"nav-item-horizontal\">\n                <NavLink to={page.to}>\n                  {page.name}\n                </NavLink>\n              </MenuItem>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 , display: { xs: 'none', md: 'flex', marginRight: 60 }}}>\n            <MenuItem className=\"nav-icon\">\n              <img src={NotesIcon} alt=\"notes\" />\n            </MenuItem>\n            <MenuItem className=\"nav-icon\">\n              <img src={AlertsIcon} alt=\"alerts\" />\n            </MenuItem>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src={AvatarImg} />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              <MenuItem onClick={handleCloseUserMenu}>\n                <Typography textAlign=\"center\">Profile</Typography>\n              </MenuItem>\n              <MenuItem onClick={handleLogout}>\n                <Typography textAlign=\"center\">Logout</Typography>\n              </MenuItem>\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Navbar;","import * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useNavigate } from \"react-router-dom\";\n\nconst SigninInfoSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Input valid email address'),\n  password: Yup.string()\n    .required('Password is required'),\n});\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {},\n    validationSchema: SigninInfoSchema,\n    onSubmit: (values) => {\n      if (values.password === 'password') {\n        localStorage.setItem('isAuthenticated', true);\n        localStorage.setItem('userId', 77777);\n        navigate('/');\n      }\n    },\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: 'calc(100vh - 56px)',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'primary.main' }}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            value={formik.values.email || ''}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            autoFocus\n          />\n          <TextField\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            value={formik.values.password || ''}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            autoComplete=\"current-password\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Accounts from './containers/Accounts';\nimport MyAccounts from './containers/MyAccounts';\nimport Requests from './containers/Requests';\nimport AccountInfo from './containers/AccountInfo';\nimport Navbar from './containers/Navbar';\nimport Signin from './containers/Signin';\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<Accounts />} />\n        <Route exact path=\"/login\" element={<Signin />} />\n        <Route exact path=\"/my-accounts\" element={<MyAccounts />} />\n        <Route exact path=\"/requests\" element={<Requests />} />\n        <Route exact path=\"/accounts/:id\" element={<AccountInfo />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Router from '../../router';\n\nfunction Layout() {\n  const appTheme = useSelector(state => state.theme)\n  console.log(appTheme)\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './containers/Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const getSettings = () => ({\n  // Layout sidenav color\n  theme: 'default',\n});\n\nconst initialState = getSettings();\n\nexport default function theme(state = initialState, action) {\n  return state;\n}","import {\n  GET_SINGLE_ACCOUNT_REQUESTED,\n  GET_SINGLE_ACCOUNT_FAILED,\n  GET_SINGLE_ACCOUNT_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  single_account: {},\n  isLoading: false,\n};\n\nfunction singleAccountReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SINGLE_ACCOUNT_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_SINGLE_ACCOUNT_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_SINGLE_ACCOUNT_SUCCESS:\n      return Object.assign({}, state, {\n        single_account: action.payload,\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default singleAccountReducer;","import {\n  GET_MY_ACCOUNTS_REQUESTED,\n  GET_MY_ACCOUNTS_FAILED,\n  GET_MY_ACCOUNTS_SUCCESS,\n  ADD_CLIENT_ACCOUNT_SUCCESS,\n  UPDATE_CLIENT_ACCOUNT_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  accounts: [],\n  headers: [],\n  isLoading: false,\n};\n\nfunction clientsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_MY_ACCOUNTS_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_MY_ACCOUNTS_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_MY_ACCOUNTS_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: action.payload.rows,\n        headers: action.payload.headers,\n        isLoading: false,\n      });\n    case ADD_CLIENT_ACCOUNT_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: [...state.accounts, action.payload],\n        isLoading: false,\n      });\n    case UPDATE_CLIENT_ACCOUNT_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: state.accounts.map(account => account.id === action.payload.id ? action.payload : account),\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default clientsReducer;","import {\n  GET_ALL_ACCOUNTS_REQUESTED,\n  GET_ALL_ACCOUNTS_FAILED,\n  GET_ALL_ACCOUNTS_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  accounts: [],\n  headers: [],\n  isLoading: false,\n};\n\nfunction accountsAllReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ALL_ACCOUNTS_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_ALL_ACCOUNTS_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_ALL_ACCOUNTS_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: action.payload.rows,\n        headers: action.payload.headers,\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default accountsAllReducer;","import {\n  GET_REQUESTS_REQUESTED,\n  GET_REQUESTS_FAILED,\n  GET_REQUESTS_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  requests: [],\n  headers: [],\n  isLoading: false,\n};\n\nfunction requestsReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_REQUESTS_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_REQUESTS_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_REQUESTS_SUCCESS:\n      return Object.assign({}, state, {\n        requests: action.payload.rows,\n        headers: action.payload.headers,\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default requestsReducer;","import {\n  GET_PLACEMENTS_REQUESTED,\n  GET_PLACEMENTS_FAILED,\n  GET_PLACEMENTS_SUCCESS,\n  ADD_PLACEMENT_SUCCESS,\n  UPDATE_PLACEMENT_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  placements: [],\n  headers: [],\n  isLoading: false,\n};\n\nfunction placementReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_PLACEMENTS_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_PLACEMENTS_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_PLACEMENTS_SUCCESS:\n      return Object.assign({}, state, {\n        placements: action.payload.rows,\n        headers: action.payload.headers,\n        isLoading: false,\n      });\n    case ADD_PLACEMENT_SUCCESS:\n      return Object.assign({}, state, {\n        placements: [...state.placements, action.payload],\n        isLoading: false,\n      });\n    case UPDATE_PLACEMENT_SUCCESS:\n      return Object.assign({}, state, {\n        placements: state.placements.map(placement => placement.id === action.payload.id ? action.payload : placement),\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default placementReducer;","import { combineReducers } from 'redux';\nimport theme from './themeStore';\nimport single_account from './single_account';\nimport accounts from './accounts';\nimport all_accounts from './all_accounts';\nimport requests from './requests';\nimport placements from './placements';\n\nexport default combineReducers({\n  theme,\n  single_account,\n  accounts,\n  all_accounts,\n  requests,\n  placements,\n});","import axios from 'axios';\n\nconst BASE_URL = 'http://20.94.2.168:8080'\n\nfunction createTreatyData(id, accountId, name, year, status, published) {\n  return {\n    id,\n    accountId,\n    name,\n    year,\n    status,\n    published,\n    details: [\n      {\n        date: '2020-01-05',\n        amount: 3,\n      },\n      {\n        date: '2020-01-02',\n        amount: 1,\n      },\n    ],\n  };\n}\n\nconst rowsTreaty = [\n  createTreatyData('treaty#1', 'acc#1', 'Casualty XOL 2021', '2021', 'Open', 'No'),\n  createTreatyData('treaty#2', 'acc#2', 'Financial Lines XOL', '2020', 'Closed', 'Yes'),\n  createTreatyData('treaty#3', 'acc#3', 'Workers Comp Cat 2021', '2021', 'Closed', 'Yes'),\n  createTreatyData('treaty#4', 'acc#4', 'Property', '2021', 'Open', 'Yes'),\n  createTreatyData('treaty#5', 'acc#5', 'Property', '2020', 'Open', 'No'),\n];\n\nfunction getSingleAccount(id) {\n  return axios\n    .get(`${BASE_URL}/trading_partners/${id}`)\n    .then((res) => {\n      return res.data;\n    })\n}\n\n\nfunction getAllAccounts() {\n  return axios\n    .get(`${BASE_URL}/trading_partners?all_fields=true`)\n    .then((res) => {\n      const responseItems = res.data?.items || []\n      const rows = responseItems.map((item, index) => ({\n        ...item,\n        companyType: 'Insured',\n        entityType: 'Investment Manager',\n        role: 'Injured',\n        legalStatus: 'In Rehab/Supervision',\n        requesterName: 'Mike Dibble',\n        requesterEmail: 'mikedibble@guycarp.com',\n        requestedDate: '11/27/2021',\n      }))\n      return {\n        headers: [\n          { label: 'Name', field: 'display_name', isLink: true },\n          { label: 'Company Type', field: 'companyType' },\n          { label: 'Entity Type', field: 'entityType' },\n          { label: 'Role', field: 'role' },\n          { label: 'Legal Status', field: 'legalStatus' },\n        ],\n        rows,\n      };\n    })\n}\n\nfunction getMyAccounts(userId) {\n  return axios\n    .get(`${BASE_URL}/users/${userId}/related/affiliations?status=APPROVED`)\n    .then((res) => {\n      const responseItems = res.data || []\n      const rows = responseItems\n      .map((item) => ({\n        ...item,\n        companyType: 'Insured',\n        entityType: 'Investment Manager',\n        role: 'Injured',\n        legalStatus: 'In Rehab/Supervision',\n        requesterName: 'Mike Dibble',\n        requesterEmail: 'mikedibble@guycarp.com',\n        requestedDate: '11/27/2021',\n      }))\n      return {\n        headers: [\n          { label: 'Name', field: 'display_name', isLink: true },\n          { label: 'Role', field: 'role' },\n          { label: 'Requester', field: 'requesterName' },\n          { label: 'Email', field: 'requesterEmail' },\n          { label: 'Requested', field: 'requestedDate' },\n        ],\n        rows,\n      };\n    })\n}\n\nfunction getRequests(userId) {\n  return axios\n    .get(`${BASE_URL}/users/${userId}/related/affiliations?status=REQUESTED`)\n    .then((res) => {\n      const responseItems = res.data || []\n      const rows = responseItems\n      .map((item, index) => ({\n        ...item,\n        companyType: 'Insured',\n        entityType: 'Investment Manager',\n        role: 'Injured',\n        legalStatus: 'In Rehab/Supervision',\n        requesterName: 'Mike Dibble',\n        requesterEmail: 'mikedibble@guycarp.com',\n        requestedDate: '11/27/2021',\n      }))\n      return {\n        headers: [\n          { label: 'Name', field: 'display_name', isLink: true },\n          { label: 'Role', field: 'role' },\n          { label: 'Requester', field: 'requesterName' },\n          { label: 'Email', field: 'requesterEmail' },\n          { label: 'Requested', field: 'requestedDate' },\n        ],\n        rows,\n      };\n    })\n}\n\nfunction getPlacements() {\n  return {\n    headers: [\n      { label: 'Client', field: 'accountId' },\n      { label: 'Treaty', field: 'name' },\n      { label: 'Year', field: 'year' },\n      { label: 'Status', field: 'status' },\n      { label: 'Published', field: 'published' },\n    ],\n    rows: rowsTreaty,\n  };\n}\n\nexport {\n  getSingleAccount,\n  getMyAccounts,\n  getAllAccounts,\n  getRequests,\n  getPlacements,\n}","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_MY_ACCOUNTS_REQUESTED,\n  GET_MY_ACCOUNTS_FAILED,\n  GET_MY_ACCOUNTS_SUCCESS,\n  ADD_CLIENT_ACCOUNT_REQUESTED,\n  ADD_CLIENT_ACCOUNT_FAILED,\n  ADD_CLIENT_ACCOUNT_SUCCESS,\n  UPDATE_CLIENT_ACCOUNT_REQUESTED,\n  UPDATE_CLIENT_ACCOUNT_FAILED,\n  UPDATE_CLIENT_ACCOUNT_SUCCESS,\n} from \"../types\";\nimport { getMyAccounts } from '../../api';\n\nfunction* getMyAccountsRequested({ id }) {\n  try {\n    const payload = yield call(getMyAccounts, id);\n    yield put({ type: GET_MY_ACCOUNTS_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_MY_ACCOUNTS_FAILED, payload: e });\n  }\n}\n\nfunction* addClientAccountRequested({ account }) {\n  try {\n    const payload = account;\n    yield put({ type: ADD_CLIENT_ACCOUNT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: ADD_CLIENT_ACCOUNT_FAILED, payload: e });\n  }\n}\n\nfunction* updateClientAccountRequested({ account }) {\n  try {\n    const payload = account;\n    yield put({ type: UPDATE_CLIENT_ACCOUNT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: UPDATE_CLIENT_ACCOUNT_FAILED, payload: e });\n  }\n}\n\nexport default function* accounts() {\n  yield takeEvery(GET_MY_ACCOUNTS_REQUESTED, getMyAccountsRequested);\n  yield takeEvery(ADD_CLIENT_ACCOUNT_REQUESTED, addClientAccountRequested);\n  yield takeEvery(UPDATE_CLIENT_ACCOUNT_REQUESTED, updateClientAccountRequested);\n}\n\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_SINGLE_ACCOUNT_REQUESTED,\n  GET_SINGLE_ACCOUNT_FAILED,\n  GET_SINGLE_ACCOUNT_SUCCESS,\n} from \"../types\";\nimport { getSingleAccount } from '../../api';\n\nfunction* getSingleAccountRequested({ id }) {\n  try {\n    const payload = yield call(getSingleAccount, id);\n    yield put({ type: GET_SINGLE_ACCOUNT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_SINGLE_ACCOUNT_FAILED, payload: e });\n  }\n}\n\nexport default function* accounts() {\n  yield takeEvery(GET_SINGLE_ACCOUNT_REQUESTED, getSingleAccountRequested);\n}\n\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_ALL_ACCOUNTS_REQUESTED,\n  GET_ALL_ACCOUNTS_FAILED,\n  GET_ALL_ACCOUNTS_SUCCESS,\n} from \"../types\";\nimport { getAllAccounts } from '../../api';\n\nfunction* getAllAccountsRequested() {\n  try {\n    const payload = yield call(getAllAccounts);\n    yield put({ type: GET_ALL_ACCOUNTS_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_ALL_ACCOUNTS_FAILED, payload: e });\n  }\n}\n\nexport default function* accounts() {\n  yield takeEvery(GET_ALL_ACCOUNTS_REQUESTED, getAllAccountsRequested);\n}\n\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_REQUESTS_REQUESTED,\n  GET_REQUESTS_FAILED,\n  GET_REQUESTS_SUCCESS,\n} from \"../types\";\nimport { getRequests } from '../../api';\n\nfunction* getAllRequestsRequested({ id }) {\n  try {\n    const payload = yield call(getRequests, id);\n    yield put({ type: GET_REQUESTS_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_REQUESTS_FAILED, payload: e });\n  }\n}\n\nexport default function* accounts() {\n  yield takeEvery(GET_REQUESTS_REQUESTED, getAllRequestsRequested);\n}\n\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_PLACEMENTS_REQUESTED,\n  GET_PLACEMENTS_FAILED,\n  GET_PLACEMENTS_SUCCESS,\n  ADD_PLACEMENT_REQUESTED,\n  ADD_PLACEMENT_FAILED,\n  ADD_PLACEMENT_SUCCESS,\n  UPDATE_PLACEMENT_REQUESTED,\n  UPDATE_PLACEMENT_FAILED,\n  UPDATE_PLACEMENT_SUCCESS,\n} from \"../types\";\nimport { getPlacements } from '../../api';\n\nfunction* getPlacementsRequested() {\n  try {\n    const payload = yield call(getPlacements);\n    yield put({ type: GET_PLACEMENTS_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_PLACEMENTS_FAILED, payload: e });\n  }\n}\n\nfunction* addPlacementRequested({ placement }) {\n  try {\n    const payload = placement;\n    yield put({ type: ADD_PLACEMENT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: ADD_PLACEMENT_FAILED, payload: e });\n  }\n}\n\nfunction* updatePlacementRequested({ placement }) {\n  try {\n    const payload = placement;\n    yield put({ type: UPDATE_PLACEMENT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: UPDATE_PLACEMENT_FAILED, payload: e });\n  }\n}\n\nexport default function* placements() {\n  yield takeEvery(GET_PLACEMENTS_REQUESTED, getPlacementsRequested);\n  yield takeEvery(ADD_PLACEMENT_REQUESTED, addPlacementRequested);\n  yield takeEvery(UPDATE_PLACEMENT_REQUESTED, updatePlacementRequested);\n}\n\n","import { all } from 'redux-saga/effects';\nimport accounts from './accounts';\nimport single_account from './single_account';\nimport all_accounts from './all_accounts';\nimport requests from './requests';\nimport placements from './placements';\n\nexport default function* Saga() {\n  yield all([\n    accounts(),\n    single_account(),\n    all_accounts(),\n    requests(),\n    placements(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport apiSaga from './saga';\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(initialiseSagaMiddleware)\n  )\n);\n\ninitialiseSagaMiddleware.run(apiSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport store from './store';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#002C77',\n    },\n    secondary: {\n      main: '#000000',\n      light: '#202020',\n    },\n    grey: {\n      main: 'rgba(32, 32, 32, 0.26)',\n    }\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}