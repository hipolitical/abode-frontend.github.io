{"version":3,"sources":["containers/Home.js","components/AutoComplete/index.js","components/TabPanel/index.js","components/TableRow/index.js","utils/helpers.js","containers/AccountsTable/index.js","containers/AccountsTable/modal.js","store/types/index.js","containers/Accounts.js","store/actions/accounts.js","assets/logo.svg","assets/notes.svg","assets/alerts.svg","assets/avatar.png","containers/Navbar/index.js","router.js","containers/Layout.js","App.js","reportWebVitals.js","store/reducers/themeStore.js","store/reducers/accounts.js","store/reducers/index.js","api/index.js","store/saga/accounts.js","store/saga/index.js","store/index.js","index.js"],"names":["Home","className","filter","createFilterOptions","Accounts","props","React","useState","value","setValue","suggestions","Autocomplete","onChange","event","newValue","name","inputValue","filterOptions","options","params","filtered","isExisting","some","option","push","selectOnFocus","clearOnBlur","handleHomeEndKeys","id","getOptionLabel","renderOption","sx","width","freeSolo","renderInput","TextField","label","TabPanel","children","index","other","role","hidden","Box","p","CustomRow","row","onEdit","availableHeaders","headers","map","header","toLowerCase","open","setOpen","hasDetails","Array","isArray","details","length","detailsLength","Object","keys","TableRow","borderBottom","item","rowName","includes","TableCell","component","scope","IconButton","size","onClick","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","margin","Typography","variant","gutterBottom","Table","TableHead","align","string","charAt","toUpperCase","slice","TableBody","rowItem","values","CollapsibleTable","rows","openEdit","TableContainer","Paper","AccountInfoSchema","Yup","shape","min","max","required","lob","program","FormDialog","initData","handleClose","handleSubmit","formik","useFormik","enableReinitialize","initialValues","validationSchema","onSubmit","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","my","handleChange","error","touched","Boolean","errors","helperText","DialogActions","Button","type","GET_ACCOUNTS_REQUESTED","GET_ACCOUNTS_SUCCESS","GET_ACCOUNTS_FAILED","ADD_ACCOUNT_REQUESTED","ADD_ACCOUNT_SUCCESS","UPDATE_ACCOUNT_REQUESTED","UPDATE_ACCOUNT_SUCCESS","theme","useTheme","dispatch","useDispatch","currentTab","setCurrentTab","currentAccount","setCurrentAccount","openAccountModal","setOpenAccountModal","useEffect","accountsData","useSelector","state","accounts","handleCloseAccountModal","Container","mt","AutoComplete","Tabs","Tab","wrapped","axis","direction","onChangeIndex","dir","mb","rowData","account","addAccount","pages","to","settings","Navbar","anchorElNav","setAnchorElNav","anchorElUser","setAnchorElUser","handleCloseNavMenu","AppBar","position","color","Toolbar","disableGutters","noWrap","mr","display","xs","md","src","LogoImg","alt","flexGrow","currentTarget","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","page","MenuItem","marginRight","NotesIcon","AlertsIcon","Tooltip","title","Avatar","AvatarImg","setting","textAlign","Router","exact","path","element","Layout","appTheme","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","accountReducer","action","assign","payload","combineReducers","createData","date","amount","getAccounts","getAccountsRequested","addAccountRequested","updateAccountRequested","call","put","takeEvery","Saga","all","initialiseSagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","run","apiSaga","createTheme","palette","primary","main","secondary","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.08aa521e.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Home() {\n  return (\n    <div className=\"Home\">\n      <p>\n        HOME\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\n\n\nconst filter = createFilterOptions();\n\nfunction Accounts(props) {\n  const [value, setValue] = React.useState(null);\n  const { suggestions } = props\n\n  return (\n    <Autocomplete\n      value={value}\n      onChange={(event, newValue) => {\n        if (typeof newValue === 'string') {\n          setValue({\n            name: newValue,\n          });\n        } else if (newValue && newValue.inputValue) {\n          // Create a new value from the user input\n          setValue({\n            name: newValue.inputValue,\n          });\n        } else {\n          setValue(newValue);\n        }\n      }}\n      filterOptions={(options, params) => {\n        const filtered = filter(options, params);\n\n        const { inputValue } = params;\n        // Suggest the creation of a new value\n        const isExisting = options.some((option) => inputValue === option.name);\n        if (inputValue !== '' && !isExisting) {\n          filtered.push({\n            inputValue,\n            name: `Add \"${inputValue}\"`,\n          });\n        }\n\n        return filtered;\n      }}\n      selectOnFocus\n      clearOnBlur\n      handleHomeEndKeys\n      id=\"free-solo-with-text-demo\"\n      options={suggestions}\n      getOptionLabel={(option) => {\n        // Value selected with enter, right from the input\n        if (typeof option === 'string') {\n          return option;\n        }\n        // Add \"xxx\" option created dynamically\n        if (option.inputValue) {\n          return option.inputValue;\n        }\n        // Regular option\n        return option.name;\n      }}\n      renderOption={(props, option) => <li {...props}>{option.name}</li>}\n      sx={{ width: 300 }}\n      freeSolo\n      renderInput={(params) => (\n        <TextField {...params} label=\"Search accounts\" />\n      )}\n    />\n  );\n}\n\nexport default Accounts;\n","import React from 'react';\nimport Box from '@mui/material/Box';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nexport default TabPanel;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { capitalizeFirstLetter } from '../../utils/helpers.js';\n\nfunction CustomRow(props) {\n  const { row, onEdit, headers } = props;\n  const availableHeaders = headers.map(header => header.toLowerCase());\n  const isAvailalbe = (rowName) => \n    availableHeaders.includes(rowName.toLowerCase()) && rowName !== 'details';\n  const [open, setOpen] = React.useState(false);\n  const hasDetails = Array.isArray(row.details) && row.details.length > 0;\n  const detailsLength = row.details ? Object.keys(row.details).length : 0;\n\n  return (\n    <React.Fragment>\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n        {Object.keys(row).filter(item => isAvailalbe(item)).map((item, index) => (\n          <TableCell key={index} component=\"th\" scope=\"row\">\n            {row[item]}\n          </TableCell>\n        ))}\n        <TableCell>\n          <IconButton\n            aria-label=\"expand row\"\n            size=\"small\"\n            onClick={onEdit}\n          >\n            <EditIcon />\n          </IconButton>\n          {hasDetails && (\n            <IconButton\n              aria-label=\"expand row\"\n              size=\"small\"\n              onClick={() => setOpen(!open)}\n            >\n              {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n            </IconButton>\n          )}\n        </TableCell>\n      </TableRow>\n      {hasDetails && (\n        <TableRow>\n          <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\n              <Box sx={{ margin: 1 }}>\n                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                  Details\n                </Typography>\n                <Table size=\"small\" aria-label=\"purchases\">\n                  <TableHead>\n                    <TableRow>\n                      {Object.keys(row.details[0]).map((item, index) => (\n                        <TableCell\n                          key={index}\n                          component=\"th\"\n                          scope=\"row\"\n                          align={index === detailsLength - 1 ? 'right' : 'left'}\n                        >\n                          {capitalizeFirstLetter(item)}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {row.details.map((rowItem, index) => (\n                      <TableRow key={index}>\n                        {Object.values(rowItem).map((item, index) => (\n                          <TableCell\n                            key={index}\n                            component=\"th\"\n                            scope=\"row\"\n                            align={index === detailsLength - 1 ? 'right' : 'left'}\n                          >\n                            {item}\n                          </TableCell>\n                        ))}\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </Collapse>\n          </TableCell>\n        </TableRow>\n      )}\n    </React.Fragment>\n  );\n}\n\nCustomRow.propTypes = {\n  row: PropTypes.shape({}).isRequired,\n};\n\nexport default CustomRow;\n\n","function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport {\n  capitalizeFirstLetter,\n}","import * as React from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport CustomRow from '../../components/TableRow';\n\nexport default function CollapsibleTable(props) {\n  const { rows, headers, openEdit } = props;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"collapsible table\">\n        <TableHead>\n          <TableRow>\n            {headers && headers.map((row, index) => (\n              <TableCell key={index}>\n                {row}\n              </TableCell>\n            ))}\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows && rows.map((row, index) => (\n            <CustomRow\n              key={index}\n              row={row}\n              headers={headers}\n              onEdit={() => openEdit(row)}\n            />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\n\nconst AccountInfoSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Name is required'),\n  lob: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('LOB is required'),\n  program: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Program is required'),\n});\n\nexport default function FormDialog({ open, initData, handleClose, handleSubmit }) {\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: initData || {},\n    validationSchema: AccountInfoSchema,\n    onSubmit: (values) => {\n      handleSubmit({\n        ...initData,\n        ...values,\n      });\n    },\n  });\n\n  return (\n    <div>\n      <Dialog open={open} onClose={handleClose} fullWidth={true} maxWidth={'sm'}>\n        <form onSubmit={formik.handleSubmit}>\n          <DialogTitle>Account Modal</DialogTitle>\n          <DialogContent dividers>\n            <DialogContentText>\n              Create new client account\n            </DialogContentText>\n            <Box sx={{ my: 2 }}>\n              <TextField\n                fullWidth\n                id=\"name\"\n                name=\"name\"\n                label=\"Name\"\n                margin=\"dense\"\n                value={formik.values.name || ''}\n                onChange={formik.handleChange}\n                error={formik.touched.name && Boolean(formik.errors.name)}\n                helperText={formik.touched.name && formik.errors.name}\n              />\n              <TextField\n                fullWidth\n                id=\"lob\"\n                name=\"lob\"\n                label=\"LOB\"\n                margin=\"dense\"\n                value={formik.values.lob || ''}\n                onChange={formik.handleChange}\n                error={formik.touched.lob && Boolean(formik.errors.lob)}\n                helperText={formik.touched.lob && formik.errors.lob}\n              />\n              <TextField\n                fullWidth\n                id=\"program\"\n                name=\"program\"\n                label=\"Program\"\n                margin=\"dense\"\n                value={formik.values.program || ''}\n                onChange={formik.handleChange}\n                error={formik.touched.program && Boolean(formik.errors.program)}\n                helperText={formik.touched.program && formik.errors.program}\n              />\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} >Cancel</Button>\n            <Button type=\"submit\">Save</Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n}","export const GET_ACCOUNTS_REQUESTED = 'GET_ACCOUNTS_REQUESTED';\nexport const GET_ACCOUNTS_SUCCESS = 'GET_ACCOUNTS_SUCCESS';\nexport const GET_ACCOUNTS_FAILED = 'GET_ACCOUNTS_FAILED';\n\nexport const ADD_ACCOUNT_REQUESTED = 'ADD_ACCOUNT_REQUESTED';\nexport const ADD_ACCOUNT_SUCCESS = 'ADD_ACCOUNT_SUCCESS';\nexport const ADD_ACCOUNT_FAILED = 'ADD_ACCOUNT_FAILED';\n\nexport const UPDATE_ACCOUNT_REQUESTED = 'UPDATE_ACCOUNT_REQUESTED';\nexport const UPDATE_ACCOUNT_SUCCESS = 'UPDATE_ACCOUNT_SUCCESS';\nexport const UPDATE_ACCOUNT_FAILED = 'UPDATE_ACCOUNT_FAILED';\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport SwipeableViews from 'react-swipeable-views';\nimport Container from '@mui/material/Container';\nimport { useTheme } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\n\nimport AutoComplete from '../components/AutoComplete';\nimport TabPanel from '../components/TabPanel';\nimport AccountsTable from './AccountsTable';\nimport AddEditModal from './AccountsTable/modal';\nimport {\n  getAccounts,\n  addAccount,\n  updateAccount,\n} from '../store/actions/accounts'\n\nfunction Accounts() {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [currentTab, setCurrentTab] = React.useState(0);\n  const [currentAccount, setCurrentAccount] = React.useState(null);\n  const [openAccountModal, setOpenAccountModal] = React.useState(false);\n\n  React.useEffect(() => {\n    dispatch(getAccounts());\n  }, [dispatch]);\n\n  const accountsData = useSelector(state => state.accounts);\n\n  const handleChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  const handleClickOpenAccountModal = () => {\n    setOpenAccountModal(true);\n  };\n\n  const handleCloseAccountModal = () => {\n    setOpenAccountModal(false);\n    setCurrentAccount(null);\n  };\n\n  const handleAccountInfoSubmit = (values) => {\n    if (values.id || currentAccount) {\n      dispatch(updateAccount(values));\n    } else {\n      dispatch(addAccount(values));\n    }\n    handleCloseAccountModal()\n  }\n\n  const handleOpenEdit = (rowData) => {\n    setCurrentAccount(rowData);\n    setOpenAccountModal(true);\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 8 }}>\n        {accountsData.accounts && (\n          <AutoComplete suggestions={accountsData.accounts} />\n        )}\n      </Box>\n      <Box sx={{ mt: 8 }}>\n        <Tabs\n          value={currentTab}\n          onChange={handleChange}\n        >\n          <Tab\n            value={0}\n            label=\"My Accounts\"\n            wrapped\n          />\n          <Tab\n            value={1}\n            label=\"All Accounts\"\n            wrapped\n          />\n        </Tabs>\n      </Box>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={currentTab}\n        onChangeIndex={handleChange}\n      >\n        <TabPanel value={currentTab} index={0} dir={theme.direction}>\n          <Box sx={{ mb: 2 }}>\n            <Button variant=\"outlined\" onClick={handleClickOpenAccountModal}>\n              Add a new client\n            </Button>\n          </Box>\n          <AccountsTable\n            rows={accountsData.accounts}\n            headers={accountsData.headers}\n            openEdit={handleOpenEdit}\n          />\n          <AddEditModal\n            open={openAccountModal}\n            initData={currentAccount}\n            handleClose={handleCloseAccountModal}\n            handleSubmit={handleAccountInfoSubmit}\n          />\n        </TabPanel>\n        <TabPanel value={currentTab} index={1} dir={theme.direction}>\n          <AccountsTable rows={accountsData.accounts} headers={accountsData.headers} />\n        </TabPanel>\n      </SwipeableViews>\n    </Container>\n  );\n}\n\nexport default Accounts;\n","import {\n  GET_ACCOUNTS_REQUESTED,\n  ADD_ACCOUNT_REQUESTED,\n  UPDATE_ACCOUNT_REQUESTED,\n} from \"../types\";\n\nexport function getAccounts() {\n  return { type: GET_ACCOUNTS_REQUESTED };\n}\n\nexport function addAccount(account) {\n  return { type: ADD_ACCOUNT_REQUESTED, account };\n}\n\nexport function updateAccount(account) {\n  return { type: UPDATE_ACCOUNT_REQUESTED, account };\n}","export default __webpack_public_path__ + \"static/media/logo.bc2d33b6.svg\";","export default __webpack_public_path__ + \"static/media/notes.ec498fcb.svg\";","export default __webpack_public_path__ + \"static/media/alerts.8a6b8dab.svg\";","export default __webpack_public_path__ + \"static/media/avatar.5c70f11c.png\";","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Container from '@mui/material/Container';\nimport Avatar from '@mui/material/Avatar';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport { NavLink } from 'react-router-dom';\nimport LogoImg from '../../assets/logo.svg';\nimport NotesIcon from '../../assets/notes.svg';\nimport AlertsIcon from '../../assets/alerts.svg';\nimport AvatarImg from '../../assets/avatar.png';\nimport './navbar.css';\n\nconst pages = [\n  { name: 'Home', to: '/' },\n  { name: 'Accounts', to: '/accounts' },\n  { name: 'Placements', to: '/placements' },\n  { name: 'Users', to: '/users' },\n];\nconst settings = ['Profile', 'Logout'];\n\nconst Navbar = () => {\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\n  const [anchorElUser, setAnchorElUser] = React.useState(null);\n\n  const handleOpenNavMenu = (event) => {\n    setAnchorElNav(event.currentTarget);\n  };\n  const handleOpenUserMenu = (event) => {\n    setAnchorElUser(event.currentTarget);\n  };\n\n  const handleCloseNavMenu = () => {\n    setAnchorElNav(null);\n  };\n\n  const handleCloseUserMenu = () => {\n    setAnchorElUser(null);\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"secondary\">\n      <Container maxWidth=\"xl\">\n        <Toolbar disableGutters className='nav-bar'>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ mr: 2, display: { xs: 'none', md: 'flex' } }}\n          >\n            <img src={LogoImg} alt='logo' />\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\n            <IconButton\n              size=\"large\"\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleOpenNavMenu}\n              color=\"inherit\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorElNav}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n              }}\n              open={Boolean(anchorElNav)}\n              onClose={handleCloseNavMenu}\n              sx={{\n                display: { xs: 'block', md: 'none' },\n              }}\n            >\n              {pages.map((page, index) => (\n                <MenuItem key={index} onClick={handleCloseNavMenu} className=\"nav-item-vertical\">\n                  <NavLink to={page.to}>\n                    {page.name}\n                  </NavLink>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n            sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}\n          >\n            <img src={LogoImg} alt='logo' />\n          </Typography>\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\n            {pages.map((page, index) => (\n              <MenuItem key={index} className=\"nav-item-horizontal\">\n                <NavLink to={page.to}>\n                  {page.name}\n                </NavLink>\n              </MenuItem>\n            ))}\n          </Box>\n\n          <Box sx={{ flexGrow: 0 , display: { xs: 'none', md: 'flex', marginRight: 60 }}}>\n            <MenuItem className=\"nav-icon\">\n              <img src={NotesIcon} alt=\"notes\" />\n            </MenuItem>\n            <MenuItem className=\"nav-icon\">\n              <img src={AlertsIcon} alt=\"alerts\" />\n            </MenuItem>\n          </Box>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title=\"Open settings\">\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\n                <Avatar alt=\"Remy Sharp\" src={AvatarImg} />\n              </IconButton>\n            </Tooltip>\n            <Menu\n              sx={{ mt: '45px' }}\n              id=\"menu-appbar\"\n              anchorEl={anchorElUser}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={Boolean(anchorElUser)}\n              onClose={handleCloseUserMenu}\n            >\n              {settings.map((setting) => (\n                <MenuItem key={setting} onClick={handleCloseNavMenu}>\n                  <Typography textAlign=\"center\">{setting}</Typography>\n                </MenuItem>\n              ))}\n            </Menu>\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default Navbar;","import React from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport Home from './containers/Home';\nimport Accounts from './containers/Accounts';\nimport Navbar from './containers/Navbar';\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route exact path=\"/accounts\" element={<Accounts />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Router from '../router';\n\nfunction Layout() {\n  const appTheme = useSelector(state => state.theme)\n  console.log(appTheme)\n  return (\n    <div className=\"App\">\n      <Router />\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './containers/Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const getSettings = () => ({\n  // Layout sidenav color\n  theme: 'default',\n});\n\nconst initialState = getSettings();\n\nexport default function theme(state = initialState, action) {\n  return state;\n}","import {\n  GET_ACCOUNTS_REQUESTED,\n  GET_ACCOUNTS_FAILED,\n  GET_ACCOUNTS_SUCCESS,\n  ADD_ACCOUNT_SUCCESS,\n  UPDATE_ACCOUNT_SUCCESS,\n} from \"../types\";\n\nconst initialState = {\n  accounts: [],\n  headers: [],\n  isLoading: false,\n};\n\nfunction accountReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_ACCOUNTS_REQUESTED:\n      return Object.assign({}, state, {\n        isLoading: true,\n      });\n    case GET_ACCOUNTS_FAILED:\n      return Object.assign({}, state, {\n        isLoading: false,\n      });\n    case GET_ACCOUNTS_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: action.payload.rows,\n        headers: action.payload.headers,\n        isLoading: false,\n      });\n    case ADD_ACCOUNT_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: [...state.accounts, action.payload],\n        isLoading: false,\n      });\n    case UPDATE_ACCOUNT_SUCCESS:\n      return Object.assign({}, state, {\n        accounts: state.accounts.map(account => account.id === action.payload.id ? action.payload : account),\n        isLoading: false,\n      });\n    default: return state;\n  }\n}\n\nexport default accountReducer;","import { combineReducers } from 'redux';\nimport theme from './themeStore';\nimport accounts from './accounts';\n\nexport default combineReducers({\n  theme,\n  accounts,\n});","function createData(id, name, lob, program) {\n  return {\n    id,\n    name,\n    lob,\n    program,\n    details: [\n      {\n        date: '2020-01-05',\n        amount: 3,\n      },\n      {\n        date: '2020-01-02',\n        amount: 1,\n      },\n    ],\n  };\n}\n\nconst rows = [\n  createData('acc#1', 'Jane Wilson', 'Multiple', 'Multiple'),\n  createData('acc#2', 'Kevin Ryder', 'Multiple', 'Multiple'),\n  createData('acc#3', 'Matthew Gas', 'Casualty', 'CAT XOL'),\n  createData('acc#4', 'Erik Bahena', 'Casualty', 'Multiple'),\n  createData('acc#5', 'John Doe', 'Multiple', 'CAT XOL'),\n];\n\nfunction getAccounts() {\n  return {\n    headers: ['Name', 'LOB', 'Program'],\n    rows,\n  };\n}\n\nexport {\n  getAccounts,\n}","import { takeEvery, call, put } from 'redux-saga/effects';\nimport {\n  GET_ACCOUNTS_REQUESTED,\n  GET_ACCOUNTS_FAILED,\n  GET_ACCOUNTS_SUCCESS,\n  ADD_ACCOUNT_REQUESTED,\n  ADD_ACCOUNT_FAILED,\n  ADD_ACCOUNT_SUCCESS,\n  UPDATE_ACCOUNT_REQUESTED,\n  UPDATE_ACCOUNT_FAILED,\n  UPDATE_ACCOUNT_SUCCESS,\n} from \"../types\";\nimport { getAccounts } from '../../api';\n\nfunction* getAccountsRequested() {\n  try {\n    const payload = yield call(getAccounts);\n    yield put({ type: GET_ACCOUNTS_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: GET_ACCOUNTS_FAILED, payload: e });\n  }\n}\n\nfunction* addAccountRequested({ account }) {\n  try {\n    const payload = account;\n    yield put({ type: ADD_ACCOUNT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: ADD_ACCOUNT_FAILED, payload: e });\n  }\n}\n\nfunction* updateAccountRequested({ account }) {\n  try {\n    const payload = account;\n    yield put({ type: UPDATE_ACCOUNT_SUCCESS, payload });\n  } catch (e) {\n    yield put({ type: UPDATE_ACCOUNT_FAILED, payload: e });\n  }\n}\n\nexport default function* accounts() {\n  yield takeEvery(GET_ACCOUNTS_REQUESTED, getAccountsRequested);\n  yield takeEvery(ADD_ACCOUNT_REQUESTED, addAccountRequested);\n  yield takeEvery(UPDATE_ACCOUNT_REQUESTED, updateAccountRequested);\n}\n\n","import { all } from 'redux-saga/effects';\nimport accounts from './accounts';\n\nexport default function* Saga() {\n  yield all([\n    accounts(),\n  ]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport apiSaga from './saga';\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(initialiseSagaMiddleware)\n  )\n);\n\ninitialiseSagaMiddleware.run(apiSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport store from './store';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#002C77',\n    },\n    secondary: {\n      main: '#000000',\n    }\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}